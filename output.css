/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --radius-xs: 0.125rem;
    --radius-xl: 0.75rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-greyScaleSurface: #ffffff;
    --color-greyScaleSurface-subtle: #f7f6f9;
    --color-greyScaleSurface-disabled: #dcd9e3;
    --color-greyScaleBorder: #eceaf0;
    --color-greyScaleBorder-disabled: #dcd9e3;
    --color-greyScaleText-negative: #f7f6f9;
    --color-greyScaleText-disabled: #bab2c7;
    --color-greyScaleText-body: #423a50;
    --color-greyScaleText-title: #201c26;
    --color-primarySurface-darker: #690f7b;
    --color-primarySurface-lighter: #d769ed;
    --color-primarySurface: #ac18ca;
    --color-primarySurface-subtle: #f8e4fc;
    --color-primaryBorder-darker: #690f7b;
    --color-primaryBorder-lighter: #d769ed;
    --color-primaryBorder: #ac18ca;
    --color-primaryText-lighter: #d769ed;
    --color-primaryText: #ac18ca;
    --color-accent1Surface-darker: #136c68;
    --color-accent1Surface-lighter: #68e4de;
    --color-accent1Surface: #20b2aa;
    --color-accent1Surface-subtle: #e5faf9;
    --color-accent1Border-darker: #136c68;
    --color-accent1Border: #20b2aa;
    --color-accent1Text: #20b2aa;
    --color-accent2Surface-darker: #826a1c;
    --color-accent2Surface-lighter: #e5cf85;
    --color-accent2Surface: #d4af37;
    --color-accent2Surface-subtle: #faf7ea;
    --color-accent2Border-darker: #826a1c;
    --color-accent2Border: #d4af37;
    --color-accent2Text: #d4af37;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .top-full {
    top: 100%;
  }
  .z-10 {
    z-index: 10;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .flex {
    display: flex;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[143\/50\] {
    aspect-ratio: 143/50;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-13 {
    height: calc(var(--spacing) * 13);
  }
  .h-13\.75 {
    height: calc(var(--spacing) * 13.75);
  }
  .h-\[24px\] {
    height: 24px;
  }
  .h-\[52\] {
    height: 52;
  }
  .h-\[60\.14px\] {
    height: 60.14px;
  }
  .h-full {
    height: 100%;
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-13 {
    width: calc(var(--spacing) * 13);
  }
  .w-13\.75 {
    width: calc(var(--spacing) * 13.75);
  }
  .w-360 {
    width: calc(var(--spacing) * 360);
  }
  .w-\[24px\] {
    width: 24px;
  }
  .w-\[172px\] {
    width: 172px;
  }
  .w-\[236px\] {
    width: 236px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[1440px\] {
    max-width: 1440px;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-\[10px\] {
    gap: 10px;
  }
  .self-stretch {
    align-self: stretch;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-s {
    border-start-start-radius: 0.25rem;
    border-end-start-radius: 0.25rem;
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[1px\] {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t-\[2px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-accent1Border {
    border-color: var(--color-accent1Border);
  }
  .border-accent2Border {
    border-color: var(--color-accent2Border);
  }
  .border-greyScaleBorder {
    border-color: var(--color-greyScaleBorder);
  }
  .border-greyScaleBorder-disabled {
    border-color: var(--color-greyScaleBorder-disabled);
  }
  .border-primaryBorder {
    border-color: var(--color-primaryBorder);
  }
  .bg-accent1Surface {
    background-color: var(--color-accent1Surface);
  }
  .bg-accent2Surface {
    background-color: var(--color-accent2Surface);
  }
  .bg-greyScaleSurface {
    background-color: var(--color-greyScaleSurface);
  }
  .bg-greyScaleSurface-disabled {
    background-color: var(--color-greyScaleSurface-disabled);
  }
  .bg-greyScaleSurface-subtle {
    background-color: var(--color-greyScaleSurface-subtle);
  }
  .bg-primarySurface {
    background-color: var(--color-primarySurface);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-24 {
    padding-inline: calc(var(--spacing) * 24);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-6\.25 {
    padding-block: calc(var(--spacing) * 6.25);
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-accent1Text {
    color: var(--color-accent1Text);
  }
  .text-accent2Text {
    color: var(--color-accent2Text);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-greyScaleText-body {
    color: var(--color-greyScaleText-body);
  }
  .text-greyScaleText-disabled {
    color: var(--color-greyScaleText-disabled);
  }
  .text-greyScaleText-negative {
    color: var(--color-greyScaleText-negative);
  }
  .text-greyScaleText-title {
    color: var(--color-greyScaleText-title);
  }
  .text-primaryText {
    color: var(--color-primaryText);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-\[0_2px_73px_2px_rgba\(0\,0\,0\,0\.10\)\] {
    --tw-shadow: 0 2px 73px 2px var(--tw-shadow-color, rgba(0,0,0,0.10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .hover\:border-accent1Border-darker {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-accent1Border-darker);
      }
    }
  }
  .hover\:border-accent2Border-darker {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-accent2Border-darker);
      }
    }
  }
  .hover\:border-primaryBorder-darker {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primaryBorder-darker);
      }
    }
  }
  .hover\:border-primaryBorder-lighter {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primaryBorder-lighter);
      }
    }
  }
  .hover\:bg-accent1Surface-lighter {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent1Surface-lighter);
      }
    }
  }
  .hover\:bg-accent2Surface-lighter {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent2Surface-lighter);
      }
    }
  }
  .hover\:bg-primarySurface-lighter {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primarySurface-lighter);
      }
    }
  }
  .hover\:text-greyScaleText-negative {
    &:hover {
      @media (hover: hover) {
        color: var(--color-greyScaleText-negative);
      }
    }
  }
  .hover\:text-primaryText-lighter {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primaryText-lighter);
      }
    }
  }
  .focus\:border-accent1Border-darker {
    &:focus {
      border-color: var(--color-accent1Border-darker);
    }
  }
  .focus\:border-accent2Border-darker {
    &:focus {
      border-color: var(--color-accent2Border-darker);
    }
  }
  .focus\:border-primaryBorder {
    &:focus {
      border-color: var(--color-primaryBorder);
    }
  }
  .focus\:border-primaryBorder-darker {
    &:focus {
      border-color: var(--color-primaryBorder-darker);
    }
  }
  .focus\:bg-accent1Surface-darker {
    &:focus {
      background-color: var(--color-accent1Surface-darker);
    }
  }
  .focus\:bg-accent1Surface-subtle {
    &:focus {
      background-color: var(--color-accent1Surface-subtle);
    }
  }
  .focus\:bg-accent2Surface-darker {
    &:focus {
      background-color: var(--color-accent2Surface-darker);
    }
  }
  .focus\:bg-accent2Surface-subtle {
    &:focus {
      background-color: var(--color-accent2Surface-subtle);
    }
  }
  .focus\:bg-primarySurface-darker {
    &:focus {
      background-color: var(--color-primarySurface-darker);
    }
  }
  .focus\:bg-primarySurface-subtle {
    &:focus {
      background-color: var(--color-primarySurface-subtle);
    }
  }
  .focus\:text-greyScaleText-negative {
    &:focus {
      color: var(--color-greyScaleText-negative);
    }
  }
  .focus\:text-primaryText {
    &:focus {
      color: var(--color-primaryText);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
}
@font-face {
  font-family: "LobsterTwo";
  src: url("/fonts/LobsterTwo/LobsterTwo-Bold.otf") format("otf");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: "LobsterTwo";
  src: url("/fonts/LobsterTwo/LobsterTwo-Regular.otf") format("otf");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "DegularDemo";
  src: url("/fonts/DegularDemo/DegularDemo-Bold.otf") format("otf");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: "DegularDemo";
  src: url("/fonts/DegularDemo/DegularDemo-Regular.otf") format("otf");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "DegularDemo";
  src: url("/fonts/DegularDemo/DegularDemo-Medium.otf") format("otf");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: "DegularDemo";
  src: url("/fonts/DegularDemo/DegularDemo-Semibold.otf") format("otf");
  font-weight: 600;
  font-style: normal;
}
.headerGradient {
  background: conic-gradient( from -84deg at 50.13% 285.9%, #f8e4fc 28.8deg, #e4f5fc 140.4deg, #faf7ea 227.32deg, #e5faf9 327.6deg );
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
    }
  }
}
